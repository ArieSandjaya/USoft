using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using USoft.Globalization.Classes;
using USoft.Common.CommonFunction;
using USoft.DataAccess;
using USoft.Globalization;

namespace USoft.Modules.IT.Item
{
    public partial class ItemTransAddEdit : USoft.Modules.PageBase
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            getUserInfo();
            LoadControl();

            if(!Page.IsPostBack)
            {
                //Binding
                ControlBindingHelper.BindDataSetToCombo(ddlBranchFrom, "Warehouse", "spGetBranchToCombo ''", "BranchId", "BranchName", null);
                ControlBindingHelper.BindDataSetToCombo(ddlBranchTo, "Warehouse", "spGetBranchToCombo ''", "BranchId", "BranchName", null);

                if (this.state == "add")
                {
                    lblItemTransCode.Text = "[Generated By System]";
                }
                else //edit
                {
                    LoadData();
                }
            }
        }

        private void LoadControl()
        {
            ucHeaderPage.Text = cf.ToUpperFirstLetter(this.state) + " Item Transfer";
            ucHeaderPage.CssClass = "divHeader1";
        }

        private void LoadData()
        {
            USoft.DataAccess.Entities.IT.Item info = new USoft.DataAccess.Entities.IT.Item();
            USoft.DataAccess.IT.Item da = new USoft.DataAccess.IT.Item();

            info.ItemTransCode = editID;

            da.getItemTransView(ref info);

            lblItemTransCode.Text = info.ItemTransCode;
            ddlBranchFrom.SelectedValue = info.BranchIdFrom.ToString();
            ddlBranchTo.SelectedValue = info.BranchIdTo.ToString();
            txtTransDate.Text = cf.DateFormatYYYYMMDD(info.TransDate);
        }

        protected bool ProcessData(string state)
        {
            USoft.DataAccess.Entities.IT.Item info = new USoft.DataAccess.Entities.IT.Item();
            USoft.DataAccess.IT.Item da = new USoft.DataAccess.IT.Item();

            info.BranchIdFrom = (ddlBranchFrom.SelectedValue != "") ? Convert.ToInt32(ddlBranchFrom.SelectedValue) : 0;
            info.BranchIdTo = (ddlBranchTo.SelectedValue != "") ? Convert.ToInt32(ddlBranchTo.SelectedValue) : 0;
            info.TransDate = Convert.ToDateTime(txtTransDate.Text);
            info.InputBy = Session["UserId"].ToString();

            if (state == "U")   // Update
            {
                info.ItemTransCode = editID;
                lblMessage.Text = da.ItemTransUpdate(info);
            }
            else // Add
            {
                lblMessage.Text = da.ItemTransInsert(ref info);
                ReturnID = info.ItemTransCode;
            }

            if (lblMessage.Text == "Process Success")   // Prevent Multiple Add
            {
                return true;
            }
            return false;
        }

        protected void imbSubmit_Click(object sender, ImageClickEventArgs e)
        {
            CekSessions.BlockUI(this.Page);

            if (this.state == "add")
            {
                if (ProcessData("A"))
                {
                    //imbSubmit.Visible = false;
                    Response.Redirect("ItemTransDetail.aspx?validate=" + validate(0) + "&editID=" + ReturnID + "&msg=" + lblMessage.Text);
                }
            }
            else
            {
                ProcessData("U");
            }

            CekSessions.UnBlockUI(this.Page, ScriptManager1);
        }

        protected void RedirectPage()
        {
            if (from == "detail")
            {
                Response.Redirect("ItemTransDetail.aspx?validate=" + validate(0) + "&editID=" + editID);
            }
            else
            {
                Response.Redirect("ItemTrans.aspx?validate=" + validate(0));
            }
        }

        protected void imbBack_Click(object sender, ImageClickEventArgs e)
        {
            RedirectPage();
        }
    }
}
