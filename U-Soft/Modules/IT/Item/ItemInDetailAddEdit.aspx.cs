using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using USoft.Globalization.Classes;
using USoft.Common.CommonFunction;
using USoft.DataAccess;
using USoft.Globalization;
using System.Collections.Generic;
using System.Web.Services;
using System.Data.SqlClient;

namespace USoft.Modules.IT.Item
{
    public partial class ItemInDetailAddEdit : USoft.Modules.PageBase
    {
        string RecieveType;

        protected void Page_Load(object sender, EventArgs e)
        {
            getUserInfo();
            LoadControl();

            if (!Page.IsPostBack)
            {
                //Binding
                ControlBindingHelper.BindDataSetToCombo(ddlItemType, "- Select One -", "spGetITItemTypeToCombo ''", "ItemTypeCode", "ItemTypeName", null);
                ControlBindingHelper.BindDataSetToCombo(ddlCondition, "- Select One -", "spGetITConditionToCombo ''", "ConditionCode", "ConditionName", null);

                lblItemInCode.Text = editID; //
                //trOldSerialNo.Visible = false;
                LoadData();

                if (this.state == "add")
                {
                    lblItemInDetailCode.Text = "[Generated By System]";
                }
                else //edit
                {
                    LoadDataDetail();
                }
                FormState();
            }
        }

        private void LoadControl()
        {
            ucHeaderPage.Text = cf.ToUpperFirstLetter(this.state) + " Item Receive Detail";
            ucHeaderPage.CssClass = "divHeader1";
        }

        private void LoadData()
        {
            USoft.DataAccess.Entities.IT.Item info = new USoft.DataAccess.Entities.IT.Item();
            USoft.DataAccess.IT.Item da = new USoft.DataAccess.IT.Item();

            info.ItemInCode = editID;

            da.getItemInView(ref info);

            RecieveType = info.ReceiveType;
            lblReceiveFrom.Text = (RecieveType == "1") ? info.BranchNameFrom : info.SupplierName; //
            if (RecieveType == "1")//from Branch
            {
                ddlStatusIn.Items.Remove(new ListItem("Return", "2"));
                ddlStatusIn.Items.Remove(new ListItem("Replace", "3"));
            }
            CreatedBy = info.CreatedBy;
            Status = info.Status;
        }

        private void LoadDataDetail()
        {
            USoft.DataAccess.Entities.IT.Item info = new USoft.DataAccess.Entities.IT.Item();
            USoft.DataAccess.IT.Item da = new USoft.DataAccess.IT.Item();

            info.ItemInCode = editID;
            info.ItemInDetailCode = editDetailID;

            da.getItemInDetailView(ref info);
            
            lblItemInDetailCode.Text = info.ItemInDetailCode;
            lblItemInCode.Text = info.ItemInCode;
            if (RecieveType == "1") //from Branch
            {
                ddlStatusIn.Items.Remove(new ListItem("Return", "2"));
                ddlStatusIn.Items.Remove(new ListItem("Replace", "3"));
                ddlStatusIn.SelectedValue = "1"; 
            }
            else //from Vendor
            {
                ddlStatusIn.SelectedValue = Convert.ToString(info.StatusIn);
            }
            ddlItemType.SelectedValue = info.ItemTypeCode;
            ControlBindingHelper.BindDataSetToCombo(ddlItemOutCode, "- Select One -", "spGetITItemRepairByOutCodeToCombo 'a.StatusOut = 1 AND a.RepairStatus = 1 AND c.ItemTypeCode = ''" + ddlItemType.SelectedValue + "''  ' ", "ITItemOutCode", "ItemSerialNo", null); //StatusOut=Repair, RepairStatus=InProgress
            ddlItemOutCode.SelectedValue = (ddlStatusIn.SelectedValue == "1") ? "" : info.ItemOutCode; //old SN by ItemOutCode
            txtSerialNo.Text = (ddlStatusIn.SelectedValue == "2") ? "" : info.SerialNo; //new SN
            txtBarcode.Text = info.Barcode;
            txtDescription.Text = (ddlStatusIn.SelectedValue == "2") ? "" : info.Description;
            ddlCondition.SelectedValue = Convert.ToString(info.ConditionCode);
        }

        protected bool ProcessData(string state)
        {
            USoft.DataAccess.Entities.IT.Item info = new USoft.DataAccess.Entities.IT.Item();
            USoft.DataAccess.IT.Item da = new USoft.DataAccess.IT.Item();

            info.ItemInCode = lblItemInCode.Text;
            info.StatusIn = Convert.ToInt32(ddlStatusIn.SelectedValue);
            info.ItemTypeCode = ddlItemType.SelectedValue;
            info.ItemOutCode = (ddlStatusIn.SelectedValue == "1") ? "" : ddlItemOutCode.SelectedValue;
            info.SerialNo = (ddlStatusIn.SelectedValue == "2") ? "" : txtSerialNo.Text;
            info.Barcode = txtBarcode.Text;
            info.Description = (ddlStatusIn.SelectedValue == "2") ? "" : txtDescription.Text;
            info.ConditionCode = Convert.ToInt32(ddlCondition.SelectedValue);
            info.InputBy = Session["UserId"].ToString();

            if (state == "U")   // Update
            {
                info.ItemInDetailCode = editDetailID;
                lblMessage.Text = da.ItemInDetailUpdate(info);
            }
            else // Add
            {
                lblMessage.Text = da.ItemInDetailInsert(info);
            }

            if (lblMessage.Text == "Process Success")   // Prevent Multiple Add
            {
                return true;
            }
            return false;
        }

        protected void ProcessForm()
        {
            CekSessions.BlockUI(this.Page);

            if (this.state == "add")
            {
                if (ProcessData("A"))
                {
                    //imbAdd.Visible = false;
                    //Response.Redirect("ItemInDetail.aspx?validate=" + validate(0) + "&editID=" + editID); 
                    ClearForm();
                }
            }
            else
            {
                ProcessData("U");
            }

            CekSessions.UnBlockUI(this.Page, ScriptManager1);
        }

        protected void ddlStatusIn_SelectedIndexChanged(object sender, EventArgs e)
        {
            CekSessions.BlockUI(this.Page);

            trOldSerialNo.Visible = (ddlStatusIn.SelectedValue == "2" || ddlStatusIn.SelectedValue == "3");
            trNewSerialNo.Visible = (ddlStatusIn.SelectedValue == "2") ? false : true;
            trModel.Visible = (ddlStatusIn.SelectedValue != "2") ? true : false;
            pnlDataForm.Update();
        }

        protected void getITItem(object sender, EventArgs e)
        {
            CekSessions.BlockUI(this.Page);

            ddlItemOutCode.Items.Clear();

            if (ddlItemType.SelectedValue != "")
            {
                ControlBindingHelper.BindDataSetToCombo(ddlItemOutCode, "- Select One -", "spGetITItemRepairByOutCodeToCombo 'a.StatusOut = 1 AND a.RepairStatus = 1 AND c.ItemTypeCode = ''" + ddlItemType.SelectedValue + "''  ' ", "ITItemOutCode", "ItemSerialNo", null); 
            }
            pnlItemCode.Update();

            CekSessions.UnBlockUI(this.Page, ScriptManager1);
        }

        protected void imbAdd_Click(object sender, ImageClickEventArgs e)
        {
            ProcessForm();
        }

        protected void imbUpdate_Click(object sender, ImageClickEventArgs e)
        {
            ProcessForm();
        }

        protected void imbBack_Click(object sender, ImageClickEventArgs e)
        {
            Response.Redirect("ItemInDetail.aspx?validate=" + validate(0) + "&from=" + from + "&editID=" + editID);
        }

        protected void ClearForm()
        {
            ddlStatusIn.SelectedValue = "";
            ddlItemType.SelectedValue = "";
            ddlItemOutCode.SelectedValue = "";
            txtSerialNo.Text = "";
            txtBarcode.Text = "";
            txtDescription.Text = "";
            ddlCondition.SelectedValue = "";
        }

        protected void FormState()
        {
            trOldSerialNo.Visible = ((ddlStatusIn.SelectedValue == "2") || (ddlStatusIn.SelectedValue == "3")) ? true : false;
            trNewSerialNo.Visible = (ddlStatusIn.SelectedValue == "2") ? false : true;
            trModel.Visible = (ddlStatusIn.SelectedValue != "2") ? true : false;

            if (state == "add")
            {
                imbAdd.Visible = true;
                imbUpdate.Visible = false;
            }
            else
            {
                if ((Status == "D") || (CreatedBy == enUI.UserId))
                {
                    imbAdd.Visible = false;
                    imbUpdate.Visible = true;

                    ddlStatusIn.Enabled = true;
                    ddlItemType.Enabled = true;
                    ddlItemOutCode.Enabled = true;
                    txtSerialNo.Enabled = true;
                    txtBarcode.Enabled = true;
                    txtDescription.Enabled = true;
                    ddlCondition.Enabled = true;
                }
                else
                {
                    ddlStatusIn.Enabled = false;
                    ddlItemType.Enabled = false;
                    ddlItemOutCode.Enabled = false;
                    txtSerialNo.Enabled = false;
                    txtBarcode.Enabled = false;
                    txtDescription.Enabled = false;
                    ddlCondition.Enabled = false;
                }
            }
        }
    }
}
